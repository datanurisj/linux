cp file1 file2    # 파일 복사
cp file1 dir1/    # 파일을 디렉토리 안에 복사
cp file1 file2 dir1/    # 한번에 여러개의 파일을 디렉토리에 복사

-i : 복사될 파일이 이름이 이미 존재할 경우, 사용자에게 덮어 쓰기 여부를 묻습니다.
-b : 복사될 파일이 이름이 이미 존재할 경우, 백업파일을 생성합니다.
-f : 복사 될 파일이 이름이 이미 존재 할 경우, 강제로 덮어쓰기 합니다.
-r : 하위 디렉토리 까지 모두 복사합니다.
-a : 원본 파일의 속성, 링크 정보까지 모두 복사합니다.
-p : 원본 파일의 소유자, 그룹, 권한 등의 정보까지 모두 복사합니다.
-v : 복사 진행 상태를 출력합니다.

tree dir    # tree 사용시 디렉토리 구조를 tree 형식으로 확인 가능
cp -r dir/ dir2/    # 디렉토리 전체복사 옵션 -r

cp -r dir1/ backup$(date '+_%Y%m%d')    # cp와 -r 옵션과 날짜를 사용해 백업본 저장 가능

du -sh    # 용량 확인
df -h     # 전체 사용량 확인
find . -type f | wc -l    # 모든 파일의 개수 확인

ps -ef | grep jar     # jar 찾기

ifconfig
top,htop


# 리눅스 권한 변경
chmod 777 (4+2+1) r + e + x
chown 
cogrp


# vi 확인중 페이지 이동
gg : 상단
shift + g : 하단

# log
/var/log/auth.log   # 접속 기록 로그 


# zip 압축
zip -r [생성할파일명][압축할 디렉토리명]    # -r 옵션으로 현재폴더의 모든것과 하위폴도 전부를 압축
# zip 해제
unzip [압축한 디렉토리]

# root 로 변환
sudo su
/로 이동 : cd


# su(Switch user)
현재 계정을 로그아웃하짖 않고 다른 계정으로 전환하는 명령어

> su[계정명] : 현재 계정의 환경변수를 유지한 채 전환
> su -[계정명] : root 계정의 환경변수까지 적용되어 전환


# sudo (Superuser DO)
현재 계정에서 일시적으로 root 권한이 필요할 경우에 사용하는 명령어

> sudo [ 명령어 ]

> whoami     // 현재 나의 계정을 알 수 있음
> exit     // 전환하기 전의 계정으로 돌아감 (logout도 마찬가지)

# 모든 계정 정보 확인
> cat /etc/passwd


# 계정생성
useradd [아이디]
passwd [아이디]                  # 비밀번호 설정
groupadd [그룹명]                # 그룹 설정
usermod -G [그룹명] [아이디]
groups [아이디]                  # 그룹 아이디 확인
usermod -s /bin/bash [아이디]    # 쉘 설정
grep /bin/bash /etc/passwd | cut -f1 -d:    # 생성 계정 확인



# sftp 접속
sftp username@remotehost

exit # sftp 

ls: List files and directories on the remote system.
cd: Change directory on the remote system.
get: Download a file from the remote system to your local system.
put: Upload a file from your local system to the remote system.
